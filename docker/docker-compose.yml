version: '3.7'

services:
#    traefik:
#        image: "traefik:v2.0"
#        ports:
#            - "80:80"
#            - "443:443"
#            - "8081:8080"
#        volumes:
#            - "/var/run/docker.sock:/var/run/docker.sock:ro"
#        command:
#            - "--api.insecure=true"
#            - "--providers.docker=true"
#            - "--entryPoints.web.address=:80"
#            - "--entryPoints.websecure.address=:443"
#            - "--providers.docker.exposedbydefault=false"
#            - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
#            - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
#            - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
#            - --entrypoints.web.address=:80
#            - --providers.docker=true
#        networks:
#            - web
    nginx:
        image: nginx:stable-alpine
        container_name: ${PROJECT_NAME}-nginx
        ports:
            - "8080:80"
        volumes:
            - ../:/var/www/html
            - ./nginx/default.conf/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
            - postgres
        networks:
            - web
    postgres:
        image: postgres:latest
        container_name: ${PROJECT_NAME}-postgres
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - "5432:5432"
        restart: unless-stopped
        networks:
            - web
    php:
        build:
            context: .
            dockerfile: DockerFile
        container_name: ${PROJECT_NAME}-php
        volumes:
            - ../:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - web
        links:
            - postgres
        depends_on:
            - postgres

networks:
    web:
        external: true
